
# Maintainer: Robin Jadoul (aur@ur4ndom.dev) 
# Contributor: Wojciech KÄ™pka (wojciech@wkepka.dev) 
pkgname=helix-git
_pkgname=helix
pkgver=24.03.r20.gb24c465a0
pkgrel=1
pkgdesc="A text editor written in rust"
url="https://helix-editor.com"
_git="https://github.com/AOx0/${_pkgname}.git"
arch=(x86_64)
makedepends=('git' 'cargo-nightly')
depends=()
provides=('hx')
conflicts=('helix')
source=("${_pkgname}::git+${_git}")
sha256sums=('SKIP')
options=(!lto)

_bin="hx"
_lib_path="/usr/lib/${_pkgname}"
_rt_path="${_lib_path}/runtime"


pkgver() {
    cd "${_pkgname}"
    git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
    cat > "$_bin" << EOF
#!/usr/bin/env sh
HELIX_RUNTIME=${_rt_path} exec ${_lib_path}/${_bin} "\$@"
EOF
    chmod +x "$_bin"

    cd "${_pkgname}"
    _srcenv
    
    cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"

    # Add custom transparent fleet_dark
    cp runtime/themes/fleet_dark.toml runtime/themes/tfleet_dark.toml
    sed -i 's/"ui.background" = { bg = "Gray 10" }/"ui.background" = { }/' runtime/themes/tfleet_dark.toml

    cat >> languages.toml <<EOF

[[language]]
name = "flex"
scope = "source.flex"
injection-regex = "f?lex"
file-types = ["lex", "flex", "l"]
roots = []
auto-format = false
comment-token = "//"
language-servers = [ ]
indent = { tab-width = 4, unit = "    " }
grammar = "c"

[[language]]
name = "yacc"
scope = "source.yacc"
injection-regex = "y(acc)?"
file-types = ["yacc", "y"]
roots = []
auto-format = false
comment-token = "//"
language-servers = [ ]
indent = { tab-width = 4, unit = "    " }
grammar = "c"

EOF

    rm rust-toolchain.toml
}


_srcenv() {
	export RUSTUP_TOOLCHAIN=nightly
	export CARGO_TARGET_DIR=target
	export RUSTFLAGS="-Z threads=2"
}

build() {
    cd "${_pkgname}"
    _srcenv
    cargo build --frozen --offline --release
}

package() {
    cd "${_pkgname}"
    mkdir -p "${pkgdir}${_lib_path}"
    rm -r  "runtime/grammars/sources" 

    cp -r runtime/queries/c runtime/queries/flex
    cp -r runtime/queries/c runtime/queries/yacc

    cp -r "runtime" "${pkgdir}${_lib_path}"
    install -Dm 0755 "target/release/${_bin}" "${pkgdir}${_lib_path}/${_bin}"
    install -Dm 0644 "LICENSE" "${pkgdir}/usr/share/licenses/${_pkgname}/LICENSE"
    install -Dm 0777 "${srcdir}/${_bin}" "${pkgdir}/usr/bin/${_bin}"
    install -Dm 0644 "contrib/Helix.desktop" "${pkgdir}/usr/share/applications/Helix.desktop"
    install -Dm 0644 "contrib/Helix.appdata.xml" "${pkgdir}/usr/share/appdata/Helix.appdata.xml"
    install -Dm 0644 "contrib/helix.png" "${pkgdir}/usr/share/icons/Helix.png"
    install -Dm 0644 "contrib/completion/hx.zsh" "${pkgdir}/usr/share/zsh/site-functions/_hx"
    install -Dm 0644 "contrib/completion/hx.bash" "${pkgdir}/usr/share/bash-completion/completions/hx.bash"
    install -Dm 0644 "contrib/completion/hx.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/hx.fish"
}
